apply plugin: 'android'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {
    compileSdkVersion parent.ext.compileSdkVersion
    buildToolsVersion parent.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion = parent.ext.minSdkVersion
        targetSdkVersion = parent.ext.targetSdkVersion
        versionCode = parent.ext.versionCode;
        versionName = parent.ext.versionName
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            packageNameSuffix '.dev'
            versionNameSuffix '-dev'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile parent.ext.libraries.dagger
    provided parent.ext.libraries.dagger_compiler
    compile parent.ext.libraries.otto
    compile parent.ext.libraries.butterknife
    compile parent.ext.libraries.appcompat
    compile parent.ext.libraries.supportv4
    compile parent.ext.libraries.supportv13
    compile parent.ext.libraries.jobqeue
    compile parent.ext.libraries.timber
    compile parent.ext.libraries.play_services
    compile parent.ext.libraries.picasso
    compile parent.ext.libraries.crouton
    compile parent.ext.libraries.maps_utils
    debugCompile parent.ext.libraries.retrofit_mock
    androidTestCompile(parent.ext.libraries.double_espresso) {
        exclude group: 'com.squareup.dagger'
    }
    compile fileTree(dir: 'libs', include: ['*.jar'])

}
